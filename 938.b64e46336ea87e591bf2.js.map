{"version":3,"file":"938.b64e46336ea87e591bf2.js","mappings":"qGA+DA,IAAYA,E,iBAAZ,SAAYA,GACV,6CACA,0BACA,wBACA,4CACA,yBACA,wBACA,qCACA,kCACD,CATD,CAAYA,IAAAA,EAAW,I,iFC9DvB,MCOaC,EAAsC,EAAGC,YAElD,iBAAKC,UDTmB,mCCSQ,WAC9B,iBAAKA,UDV6D,gCCUrC,WAC3B,kBAAMA,UDXoG,iCCW3E,uBAAaD,EAAME,OAClD,iBAAMD,UDZ8I,gCCYtH,SAAGD,EAAMG,aAEzC,gBAAKF,UDd4L,kCCclK,SAC5BD,EAAMI,SAASC,KAAI,CAACC,EAASC,KAC5B,iBAAiBN,UDhBwN,iCCgB/L,WACxC,iBAAMA,UDjBgR,qCCiBnP,SAChCK,EAAQA,QAAUA,EAAQA,QAAQE,KAAO,qBAE5C,kBAAMP,UDpBuU,yCCoBtS,cAAIK,EAAQG,aACnD,iBAAMR,UDrB+X,sCCqBjW,SACjCK,EAAQA,SAAU,EAAAI,EAAA,GAAYJ,EAAQA,QAAQK,QAAS,EAAAD,EAAA,GAAY,OAN9DH,QAWd,gBAAKN,UD3Bqb,gCC2B7Z,UAC3B,kBAAMA,UD5B8d,mCC4Bnc,yBAClB,IAAIW,KAAKZ,EAAMa,WAAWC,6B,4CC7BjD,MCMaC,EAAsB,K,MACjC,MAAM,KAAEC,EAAI,MAAEC,IAAU,WACxB,EAAAC,EAAAC,GAAgB,CAAEF,UAElB,MAAMG,GAAwB,IAAAC,cAC3BrB,IAA8B,CAC7BsB,IAAKtB,EAAME,GACXqB,OAAQ,KAAM,SAACxB,EAAS,CAACC,MAAOA,OAElC,IAGIwB,EAA+D,QAAvD,EAAAR,aAAI,EAAJA,EAAMA,KAAKX,KAAKL,GAAUoB,EAAsBpB,YAAO,QAAI,GAEzE,OACE,gBAAKC,UDrBmB,mCCqBQ,UAC9B,SAACwB,EAAA,EAAU,CAACC,QAAQ,EAAOF,MAAOA,KAErC,ECnBH,EAJ4B,KACnB,SAACT,EAAS,G,oECOZ,MAAMG,EAAkB,EAAYS,OAAMV,YAC/C,MAAM,UAAEW,IAAc,UAEtB,IAAAC,YAAU,KACR,GAAIZ,EAAO,EACT,QAAmBA,GAEfU,GACFA,EAAKG,WAAU,QAAkBb,IAGnC,MAAMc,GAAgB,QAA0Bd,GAC5Cc,GACFH,EAAUG,EAEd,IACC,CAACd,EAAOU,EAAMC,GAAW,C,yDCvBvB,MAAMI,EAAa,KACxB,MAAMC,GAAU,IAAAC,YAAW,KAC3B,IAAKD,EACH,MAAM,IAAIE,MAAM,6DAElB,OAAOF,CAAO,C,0DCPhB,MCUaR,EAAyC,EACpDC,SACAF,QACAY,cACAC,uBAEqB,IAAjBb,EAAMc,QACD,gBAAKrC,UDjB0I,gCCiBnH,kCAInC,eAAIA,eAAsBsC,IAAXb,GAAwBA,EDrBsB,mCAA1C,+BCqB0D,SAC1EF,EAAMnB,KAAI,CAACmC,EAAMjC,KAChB,SAACkC,EAAQ,CAEPD,KAAMA,EACNE,IAAKC,EAAc,CAAEnB,QAAOjB,QAAO6B,cAAaC,uBAF3CG,EAAKlB,SAadsB,GAAU,IAAAC,aAAyC,EAAGL,QAAQE,KAClE,eAAIxC,GAAIsC,EAAKlB,IAAKoB,IAAKA,EAAKzC,UDtCiF,mCCsCvD,SACnDuC,EAAKjB,aAGVqB,EAAQE,YAAc,UAEtB,MAAML,GAAW,IAAAM,MAAKH,GAEhBD,EAAgB,EACpBnB,QACAjB,QACA6B,cACAC,uBAOQW,IACFzC,IAAUiB,EAAMc,OAAS,GAAKF,IAChCA,EAAYa,QAAUD,EAClBX,GACFA,EAAkBb,EAAMA,EAAMc,OAAS,GAAGhB,KAE9C,C","sources":["webpack://app-store/./src/entities/Order/types/order.ts","webpack://app-store/./src/entities/Order/ui/OrderItem.module.scss?8488","webpack://app-store/./src/entities/Order/ui/OrderItem.tsx","webpack://app-store/./src/features/OrderList/ui/OrderList.module.scss?0c78","webpack://app-store/./src/features/OrderList/ui/OrderList.tsx","webpack://app-store/./src/pages/OrderPage/OrderPage.tsx","webpack://app-store/./src/shared/api/errors/useErrorHandler.ts","webpack://app-store/./src/shared/hooks/useMessage.ts","webpack://app-store/./src/shared/ui/RenderList/RenderList.module.scss?5ddc","webpack://app-store/./src/shared/ui/RenderList/RenderList.tsx"],"sourcesContent":["export type Order = {\n  id: string;\n  products: {\n    product?: {\n      name: string;\n      price: number;\n    };\n    quantity: number;\n  }[];\n  status: OrderStatus;\n  createdAt: string;\n};\n\nexport type OrderFilters = {\n  productIds?: string[];\n  userId?: string;\n  ids?: string[];\n  status?: OrderStatus;\n  pagination?: {\n    pageSize?: number;\n    pageNumber?: number;\n  };\n  createdAt?: {\n    gte?: string;\n    lte?: string;\n  };\n  updatedAt?: {\n    gte?: string;\n    lte?: string;\n  };\n  sorting?: {\n    type: 'ASC' | 'DESC';\n    field: 'id' | 'createdAt' | 'updatedAt' | 'name' | 'date';\n  };\n};\n\nexport type CreateBody = {\n  products: {\n    id: string;\n    quantity: number;\n  }[];\n  status?: OrderStatus;\n};\n\nexport type UpdateBody = {\n  id: string;\n  productIds?: string[];\n  status?: OrderStatus;\n};\n\nexport type Result = {\n  data: Order[];\n  pagination: {\n    pageSize: number;\n    pageNumber: number;\n    total: number;\n  };\n  sorting: {\n    type: 'ASC' | 'DESC';\n    field: 'id' | 'createdAt' | 'updatedAt' | 'name';\n  };\n};\n\nexport enum OrderStatus {\n  PendingConfirmation = 'pending_confirmation',\n  Processing = 'processing',\n  Packaging = 'packaging',\n  WaitingForDelivery = 'waiting_for_delivery',\n  InTransit = 'in_transit',\n  Delivered = 'delivered',\n  ReturnRequested = 'return_requested',\n  OrderCancelled = 'order_cancelled',\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OrderItem-module_container-q_FHL\",\"header\":\"OrderItem-module_header-h4Aor\",\"orderId\":\"OrderItem-module_orderId-iVeVe\",\"status\":\"OrderItem-module_status-TAt5Y\",\"products\":\"OrderItem-module_products-ULeV1\",\"product\":\"OrderItem-module_product-AJfjw\",\"productName\":\"OrderItem-module_productName-aSXjh\",\"productQuantity\":\"OrderItem-module_productQuantity-O0ded\",\"productPrice\":\"OrderItem-module_productPrice-qCBL6\",\"footer\":\"OrderItem-module_footer-nJZ_2\",\"createdAt\":\"OrderItem-module_createdAt-XARdu\"};","import { formatPrice } from 'src/shared/lib/formats/formatPrice';\nimport styles from './OrderItem.module.scss';\nimport { Order } from '../types/order';\n\ninterface OrderItemProps {\n  order: Order;\n}\n\nexport const OrderItem: React.FC<OrderItemProps> = ({ order }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <span className={styles.orderId}>Order ID: {order.id}</span>\n        <span className={styles.status}>{order.status}</span>\n      </div>\n      <div className={styles.products}>\n        {order.products.map((product, index) => (\n          <div key={index} className={styles.product}>\n            <span className={styles.productName}>\n              {product.product ? product.product.name : 'Unknown Product'}\n            </span>\n            <span className={styles.productQuantity}>x{product.quantity}</span>\n            <span className={styles.productPrice}>\n              {product.product ? formatPrice(product.product.price) : formatPrice(0)}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className={styles.footer}>\n        <span className={styles.createdAt}>\n          Created at: {new Date(order.createdAt).toLocaleDateString()}\n        </span>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OrderList-module_container-IG7TG\"};","import { useCallback } from 'react';\nimport { Order, OrderItem, useGetAllOrdersQuery } from 'src/entities/Order';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\nimport { RenderList } from 'src/shared/ui/RenderList/RenderList';\nimport styles from './OrderList.module.scss';\n\nexport const OrderList: React.FC = () => {\n  const { data, error } = useGetAllOrdersQuery();\n  useErrorHandler({ error });\n\n  const convertCategoryToItem = useCallback(\n    (order: Order): IRenderItem => ({\n      key: order.id,\n      render: () => <OrderItem order={order} />,\n    }),\n    [],\n  );\n\n  const items = data?.data.map((order) => convertCategoryToItem(order)) ?? [];\n\n  return (\n    <div className={styles.container}>\n      <RenderList isGrid={false} items={items} />\n    </div>\n  );\n};\n","import { OrderList } from 'src/features/OrderList';\n\nconst OrderPage: React.FC = () => {\n  return <OrderList />;\n};\n\nexport default OrderPage;\n","import { useEffect } from 'react';\nimport { FormInstance } from 'antd';\nimport { useMessage } from 'src/shared/hooks/useMessage';\nimport { extractFormErrors, extractWithoutFiledErrors, throwIfGlobalError } from './errorParser';\n\nexport interface UseErrorHandlerProps<TFields> {\n  error: unknown;\n  form?: FormInstance<TFields>;\n}\n\nexport const useErrorHandler = <TFields>({ form, error }: UseErrorHandlerProps<TFields>) => {\n  const { showError } = useMessage();\n\n  useEffect(() => {\n    if (error) {\n      throwIfGlobalError(error);\n\n      if (form) {\n        form.setFields(extractFormErrors(error));\n      }\n\n      const joinedMessage = extractWithoutFiledErrors(error);\n      if (joinedMessage) {\n        showError(joinedMessage);\n      }\n    }\n  }, [error, form, showError]);\n};\n","import { useContext } from 'react';\nimport { MessageContext } from 'src/shared/providers/MessageContext';\n\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('useMessage должен использоваться внутри <MessageProvider>');\n  }\n  return context;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"RenderList-module_list-BF_R0\",\"listGrid\":\"RenderList-module_listGrid-VEEh9\",\"listItem\":\"RenderList-module_listItem-d2Xxn\",\"empty\":\"RenderList-module_empty-VeKxm\"};","import React, { forwardRef, memo } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport styles from './RenderList.module.scss';\n\nexport interface IRenderListProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n  onLastItemChanged?: (key: string) => void;\n}\n\nexport const RenderList: React.FC<IRenderListProps> = ({\n  isGrid,\n  items,\n  lastItemRef,\n  onLastItemChanged,\n}) => {\n  if (items.length === 0) {\n    return <div className={styles.empty}>No items to display</div>;\n  }\n\n  return (\n    <ul className={isGrid === undefined || isGrid ? styles.listGrid : styles.list}>\n      {items.map((item, index) => (\n        <ItemMemo\n          key={item.key}\n          item={item}\n          ref={setRefForLast({ items, index, lastItemRef, onLastItemChanged })}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype ListItemProps = {\n  item: IRenderItem;\n};\n\nconst ItemRef = forwardRef<HTMLLIElement, ListItemProps>(({ item }, ref) => (\n  <li id={item.key} ref={ref} className={styles.listItem}>\n    {item.render()}\n  </li>\n));\nItemRef.displayName = 'ItemRef';\n\nconst ItemMemo = memo(ItemRef);\n\nconst setRefForLast = ({\n  items,\n  index,\n  lastItemRef,\n  onLastItemChanged,\n}: {\n  items: IRenderItem[];\n  index: number;\n  onLastItemChanged?: (key: string) => void;\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n}) => {\n  return (element: HTMLLIElement | null) => {\n    if (index === items.length - 1 && lastItemRef) {\n      lastItemRef.current = element;\n      if (onLastItemChanged) {\n        onLastItemChanged(items[items.length - 1].key);\n      }\n    }\n  };\n};\n"],"names":["OrderStatus","OrderItem","order","className","id","status","products","map","product","index","name","quantity","formatPrice","price","Date","createdAt","toLocaleDateString","OrderList","data","error","useErrorHandler","u","convertCategoryToItem","useCallback","key","render","items","RenderList","isGrid","form","showError","useEffect","setFields","joinedMessage","useMessage","context","useContext","Error","lastItemRef","onLastItemChanged","length","undefined","item","ItemMemo","ref","setRefForLast","ItemRef","forwardRef","displayName","memo","element","current"],"sourceRoot":""}