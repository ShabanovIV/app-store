{"version":3,"file":"49.9e088e15fc86ac073969.js","mappings":"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","sources":["webpack://app-store/./src/entities/Category/ui/CategoryCard.module.scss?19e6","webpack://app-store/./src/entities/Category/ui/CategoryCard.tsx","webpack://app-store/./src/features/CategoryList/ui/CategoryList.module.scss?f66d","webpack://app-store/./src/features/CategoryList/ui/CategoryList.tsx","webpack://app-store/./src/pages/CategoryPage/CategoryPage.tsx","webpack://app-store/./src/pages/CategoryPage/CategoryPage.module.scss?add0","webpack://app-store/./src/shared/api/errors/useErrorHandler.ts","webpack://app-store/./src/shared/hooks/useMessage.ts","webpack://app-store/./src/shared/hooks/usePaginationData.ts","webpack://app-store/./src/shared/ui/RenderList/RenderList.module.scss?5ddc","webpack://app-store/./src/shared/ui/RenderList/RenderList.tsx","webpack://app-store/./src/shared/ui/RenderList/RenderListObserver.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CategoryCard-module_card-tskRF\",\"cardTop\":\"CategoryCard-module_cardTop-zwy1m\",\"cardImage\":\"CategoryCard-module_cardImage-pBC6p\",\"cardLabel\":\"CategoryCard-module_cardLabel-Ktib8\",\"cardBottom\":\"CategoryCard-module_cardBottom-iovfo\",\"cardPrices\":\"CategoryCard-module_cardPrices-FIfKO\",\"cardPrice\":\"CategoryCard-module_cardPrice-jcayE\",\"cardPriceDiscount\":\"CategoryCard-module_cardPriceDiscount-HXG0p\",\"cardPriceCommon\":\"CategoryCard-module_cardPriceCommon-Z3N5g\",\"cardTitle\":\"CategoryCard-module_cardTitle-C0cLW\",\"cardAdd\":\"CategoryCard-module_cardAdd-N5ROw\"};","import { ReactNode } from 'react';\nimport empty from 'src/shared/assets/images/empty.png';\nimport styles from './CategoryCard.module.scss';\nimport { Category } from '../types/category';\n\ninterface CategoryCardProps {\n  category: Category;\n  onClick?: () => void;\n  footer?: () => ReactNode;\n}\n\nexport const CategoryCard: React.FC<CategoryCardProps> = ({ category, onClick, footer }) => {\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>): void => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (onClick) onClick();\n  };\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.cardTop}>\n        <a href=\"#\" onClick={handleClick} className={styles.cardImage}>\n          <img src={category.photo ? category.photo : empty} alt={category.name} />\n        </a>\n      </div>\n      <div className={styles.cardBottom}>\n        <a href=\"#\" onClick={handleClick} className={styles.cardTitle}>\n          {category.name}\n        </a>\n        {footer && footer()}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CategoryList-module_container-JHTbf\",\"end\":\"CategoryList-module_end-M57dM\"};","import { useCallback } from 'react';\nimport { Divider, Space, Spin } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { Category, CategoryCard, useGetCategoriesQuery } from 'src/entities/Category';\nimport { ROUTES } from 'src/shared/config/routes';\nimport { usePaginatedData } from 'src/shared/hooks/usePaginationData';\nimport { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\nimport RenderListObserver from 'src/shared/ui/RenderList/RenderListObserver';\nimport styles from './CategoryList.module.scss';\n\ninterface ConvertProps {\n  category: Category;\n  onClick?: (id: string) => void;\n}\n\ninterface CategoryListProps {\n  footerItem?: () => React.ReactNode;\n}\n\nexport const CategoryList: React.FC<CategoryListProps> = ({ footerItem }) => {\n  const navigate = useNavigate();\n\n  const fetchFunction = useCallback(\n    (pagination: { pageSize: number; pageNumber: number }, skip: boolean) => {\n      return useGetCategoriesQuery(\n        { pagination, sorting: { type: 'ASC', field: 'createdAt' } },\n        { skip },\n      );\n    },\n    [],\n  );\n\n  const convertCategoryToItem = useCallback(\n    ({ category, onClick }: ConvertProps): IRenderItem => ({\n      key: category.id,\n      render: () => (\n        <CategoryCard\n          category={category}\n          onClick={onClick ? () => onClick(category.id) : undefined}\n          footer={footerItem}\n        />\n      ),\n    }),\n    [footerItem],\n  );\n\n  const convertItem = useCallback(\n    (category: Category) => {\n      return convertCategoryToItem({\n        category,\n        onClick: () => navigate(`${ROUTES.products.basePath}${category.id}`),\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convertCategoryToItem],\n  );\n\n  const { hasMore, isFetching, items, handleLastItem } = usePaginatedData({\n    fetchFunction,\n    convertItem,\n  });\n\n  return (\n    <div className={styles.container}>\n      <RenderListObserver items={items} onLastItem={handleLastItem} />\n      {(!hasMore || isFetching) && <Divider />}\n      {!hasMore && <Space className={styles.end}>Все категории загружены</Space>}\n      {isFetching && <Spin />}\n    </div>\n  );\n};\n","import { CategoryList } from 'src/features/CategoryList/';\nimport styles from './CategoryPage.module.scss';\n\nconst CategoryPage: React.FC = () => {\n  return (\n    <div className={styles.page}>\n      <CategoryList />\n    </div>\n  );\n};\n\nexport default CategoryPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"CategoryPage-module_page-FRD00\"};","import { useEffect } from 'react';\nimport { FormInstance } from 'antd';\nimport { useMessage } from 'src/shared/hooks/useMessage';\nimport { extractFormErrors, extractWithoutFiledErrors, throwIfGlobalError } from './errorParser';\n\nexport interface UseErrorHandlerProps<TFields> {\n  error: unknown;\n  form?: FormInstance<TFields>;\n}\n\nexport const useErrorHandler = <TFields>({ form, error }: UseErrorHandlerProps<TFields>) => {\n  const { showError } = useMessage();\n\n  useEffect(() => {\n    if (error) {\n      throwIfGlobalError(error);\n\n      if (form) {\n        form.setFields(extractFormErrors(error));\n      }\n\n      const joinedMessage = extractWithoutFiledErrors(error);\n      if (joinedMessage) {\n        showError(joinedMessage);\n      }\n    }\n  }, [error, form, showError]);\n};\n","import { useContext } from 'react';\nimport { MessageContext } from 'src/shared/providers/MessageContext';\n\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('useMessage должен использоваться внутри <MessageProvider>');\n  }\n  return context;\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useErrorHandler } from '../api/errors/useErrorHandler';\nimport { IRenderItem } from '../ui/RenderList/IRenderItem';\n\nconst PAGE_SIZE = 10;\n\nexport interface PaginatedResponse<TData> {\n  data: TData[];\n  pagination: {\n    pageSize: number;\n    pageNumber: number;\n    total: number;\n  };\n  sorting: {\n    type: 'ASC' | 'DESC';\n    field: 'id' | 'createdAt' | 'updatedAt' | 'name';\n  };\n}\n\ninterface UsePaginationDataProps<TData> {\n  fetchFunction: (\n    pagination: { pageSize: number; pageNumber: number },\n    skip: boolean,\n  ) => {\n    data?: PaginatedResponse<TData>;\n    isFetching: boolean;\n    isLoading: boolean;\n    error?: unknown;\n    refetch: () => void;\n  };\n  convertItem: (item: TData) => IRenderItem;\n}\n\nexport const usePaginatedData = <TData>({\n  fetchFunction,\n  convertItem,\n}: UsePaginationDataProps<TData>) => {\n  const loadedPages = useRef<number[]>([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [items, setItems] = useState<IRenderItem[]>([]);\n  const { data, isFetching, isLoading, error, refetch } = fetchFunction(\n    { pageSize: PAGE_SIZE, pageNumber: pageNumber },\n    pageNumber === 0 || loadedPages.current.includes(pageNumber),\n  );\n\n  useErrorHandler({ error });\n\n  const handleLastItem = useCallback(() => {\n    if (!hasMore || isFetching) return;\n    setPageNumber((prev) => prev + 1);\n  }, [hasMore, isFetching]);\n\n  useEffect(() => {\n    if (isLoading && isFetching) {\n      setItems([]);\n    }\n  }, [isFetching, isLoading]);\n\n  useEffect(() => {\n    if (\n      data &&\n      data.data.length > 0 &&\n      !loadedPages.current.includes(pageNumber) &&\n      data.pagination.pageNumber === pageNumber\n    ) {\n      loadedPages.current.push(pageNumber);\n      setItems((prev) => [...prev, ...data.data.map((item) => convertItem(item))]);\n    } else if (data && data.data.length < PAGE_SIZE) {\n      setHasMore(false);\n    }\n  }, [convertItem, data, pageNumber]);\n\n  return {\n    isFetching,\n    hasMore,\n    items,\n    refetch,\n    handleLastItem,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"RenderList-module_list-BF_R0\",\"listGrid\":\"RenderList-module_listGrid-VEEh9\",\"listItem\":\"RenderList-module_listItem-d2Xxn\",\"empty\":\"RenderList-module_empty-VeKxm\"};","import React, { forwardRef, memo } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport styles from './RenderList.module.scss';\n\nexport interface IRenderListProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n  onLastItemChanged?: (key: string) => void;\n}\n\nexport const RenderList: React.FC<IRenderListProps> = ({\n  isGrid,\n  items,\n  lastItemRef,\n  onLastItemChanged,\n}) => {\n  if (items.length === 0) {\n    return <div className={styles.empty}>No items to display</div>;\n  }\n\n  return (\n    <ul className={isGrid === undefined || isGrid ? styles.listGrid : styles.list}>\n      {items.map((item, index) => (\n        <ItemMemo\n          key={item.key}\n          item={item}\n          ref={setRefForLast({ items, index, lastItemRef, onLastItemChanged })}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype ListItemProps = {\n  item: IRenderItem;\n};\n\nconst ItemRef = forwardRef<HTMLLIElement, ListItemProps>(({ item }, ref) => (\n  <li id={item.key} ref={ref} className={styles.listItem}>\n    {item.render()}\n  </li>\n));\nItemRef.displayName = 'ItemRef';\n\nconst ItemMemo = memo(ItemRef);\n\nconst setRefForLast = ({\n  items,\n  index,\n  lastItemRef,\n  onLastItemChanged,\n}: {\n  items: IRenderItem[];\n  index: number;\n  onLastItemChanged?: (key: string) => void;\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n}) => {\n  return (element: HTMLLIElement | null) => {\n    if (index === items.length - 1 && lastItemRef) {\n      lastItemRef.current = element;\n      if (onLastItemChanged) {\n        onLastItemChanged(items[items.length - 1].key);\n      }\n    }\n  };\n};\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport { RenderList } from './RenderList';\n\nexport interface IRenderListObserverProps {\n  items: IRenderItem[];\n  onLastItem: () => void;\n}\n\nconst RenderListObserver: React.FC<IRenderListObserverProps> = ({ items, onLastItem }) => {\n  const [lastItemKey, setLastItemKey] = useState('');\n  const prevLastItemKey = useRef('');\n  const lastItemRef = useRef<HTMLLIElement | null>(null);\n  const hasCalledOnLastItem = useRef(false);\n\n  const handleIntersection = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      const entry = entries[0];\n      if (entry?.isIntersecting && !hasCalledOnLastItem.current) {\n        hasCalledOnLastItem.current = true;\n        onLastItem();\n      }\n    },\n    [onLastItem],\n  );\n\n  useEffect(() => {\n    if (lastItemKey === prevLastItemKey.current) {\n      return;\n    } else {\n      prevLastItemKey.current = lastItemKey;\n    }\n\n    const observer = new IntersectionObserver(handleIntersection, { threshold: 0.5 });\n\n    const currentLastItem = lastItemRef.current;\n    if (currentLastItem) {\n      observer.observe(currentLastItem);\n    }\n\n    return () => {\n      if (currentLastItem) {\n        observer.unobserve(currentLastItem);\n      }\n    };\n  }, [handleIntersection, lastItemKey]);\n\n  useEffect(() => {\n    hasCalledOnLastItem.current = false;\n  }, [lastItemKey]);\n\n  return <RenderList items={items} lastItemRef={lastItemRef} onLastItemChanged={setLastItemKey} />;\n};\n\nexport default RenderListObserver;\n"],"names":["CategoryCard","category","onClick","footer","handleClick","e","preventDefault","stopPropagation","className","href","src","photo","empty","alt","name","CategoryList","footerItem","navigate","fetchFunction","useCallback","pagination","skip","sorting","type","field","convertCategoryToItem","key","id","render","Category","undefined","convertItem","products","basePath","hasMore","isFetching","items","handleLastItem","RenderListObserver","onLastItem","useErrorHandler","form","error","showError","useEffect","setFields","joinedMessage","useMessage","context","useContext","Error","usePaginatedData","loadedPages","useRef","pageNumber","setPageNumber","useState","setHasMore","setItems","data","isLoading","refetch","pageSize","current","includes","u","prev","length","push","map","item","RenderList","isGrid","lastItemRef","onLastItemChanged","index","ItemMemo","ref","setRefForLast","ItemRef","forwardRef","displayName","memo","element","lastItemKey","setLastItemKey","prevLastItemKey","hasCalledOnLastItem","handleIntersection","entries","entry","isIntersecting","observer","IntersectionObserver","threshold","currentLastItem","observe","unobserve"],"sourceRoot":""}