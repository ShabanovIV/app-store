{"version":3,"file":"923.48c56fabbb299e2f58df.js","mappings":"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","sources":["webpack://app-store/./src/entities/Category/ui/CategoryCard.module.scss?19e6","webpack://app-store/./src/entities/Category/ui/CategoryCard.tsx","webpack://app-store/./src/shared/hooks/usePaginationData.ts","webpack://app-store/./src/shared/ui/RenderList/RenderList.module.scss?5ddc","webpack://app-store/./src/shared/ui/RenderList/RenderList.tsx","webpack://app-store/./src/shared/ui/RenderList/RenderListObserver.tsx","webpack://app-store/./src/features/CategoryList/ui/CategoryList.tsx","webpack://app-store/./src/entities/Category/ui/convertToIRenderItem.tsx","webpack://app-store/./src/features/CategoryList/ui/CategoryList.module.scss?f66d","webpack://app-store/./src/pages/CategoryPage/CategoryPage.tsx","webpack://app-store/./src/shared/api/errors/useErrorHandler.ts","webpack://app-store/./src/shared/hooks/useMessage.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"categoryCard\":\"CategoryCard-module_categoryCard-PW2qj\",\"photo\":\"CategoryCard-module_photo-HGATH\",\"title\":\"CategoryCard-module_title-y4FNh\",\"buttonSpace\":\"CategoryCard-module_buttonSpace-uAT6I\"};","import { MouseEvent } from 'react';\nimport { Button, Space, Image, Divider, Card } from 'antd';\nimport styles from './CategoryCard.module.scss';\nimport { Category } from '../types/category';\n\ninterface CategoryCardProps {\n  category: Category;\n  onClick?: () => void;\n  onRemove?: () => void;\n  onEdit?: () => void;\n}\n\nexport const CategoryCard: React.FC<CategoryCardProps> = ({\n  category,\n  onClick,\n  onRemove,\n  onEdit,\n}) => {\n  const handleClick = (): void => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  const handleButtonClick = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const buttonType = e.currentTarget.dataset.type;\n\n    if (buttonType === 'delete' && onRemove) {\n      onRemove();\n    } else if (buttonType === 'edit' && onEdit) {\n      onEdit();\n    }\n  };\n\n  return (\n    <Card className={styles.categoryCard} onClick={handleClick}>\n      {category.photo && (\n        <Image className={styles.photo} preview={false} src={category.photo} alt={category.name} />\n      )}\n\n      <p className={styles.title}>{category.name}</p>\n\n      {(onEdit || onRemove) && <Divider />}\n\n      <Space className={styles.buttonSpace}>\n        {onEdit && (\n          <Button datatype=\"edit\" onClick={handleButtonClick}>\n            Edit\n          </Button>\n        )}\n        {onRemove && (\n          <Button datatype=\"delete\" danger onClick={handleButtonClick}>\n            Delete\n          </Button>\n        )}\n      </Space>\n    </Card>\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useErrorHandler } from '../api/errors/useErrorHandler';\nimport { IRenderItem } from '../ui/RenderList/IRenderItem';\n\nconst PAGE_SIZE = 10;\n\nexport interface PaginatedResponse<T> {\n  data: T[];\n  pagination: {\n    pageSize: number;\n    pageNumber: number;\n    total: number;\n  };\n  sorting: {\n    type: 'ASC' | 'DESC';\n    field: 'id' | 'createdAt' | 'updatedAt' | 'name';\n  };\n}\n\nexport const usePaginatedData = <T>(\n  fetchFunction: (\n    arg: { pagination: { pageSize: number; pageNumber: number } },\n    options: { skip: boolean },\n  ) => {\n    data?: PaginatedResponse<T>;\n    isFetching: boolean;\n    isLoading: boolean;\n    error?: unknown;\n    refetch: () => void;\n  },\n  convertItem: (item: T, navigate: (path: string) => void) => IRenderItem,\n) => {\n  const loadedPages = useRef<number[]>([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [items, setItems] = useState<IRenderItem[]>([]);\n  const { data, isFetching, isLoading, error, refetch } = fetchFunction(\n    {\n      pagination: { pageSize: PAGE_SIZE, pageNumber: pageNumber },\n    },\n    { skip: pageNumber === 0 || loadedPages.current.includes(pageNumber) },\n  );\n\n  useErrorHandler({ error });\n\n  const navigate = useNavigate();\n\n  const handleLastItem = useCallback(() => {\n    if (!hasMore || isFetching) return;\n    setPageNumber((prev) => prev + 1);\n  }, [hasMore, isFetching]);\n\n  useEffect(() => {\n    if (isLoading && isFetching) {\n      setItems([]);\n    }\n  }, [isFetching, isLoading]);\n\n  useEffect(() => {\n    if (\n      data &&\n      data.data.length > 0 &&\n      !loadedPages.current.includes(pageNumber) &&\n      data.pagination.pageNumber === pageNumber\n    ) {\n      loadedPages.current.push(pageNumber);\n      setItems((prev) => [...prev, ...data.data.map((item) => convertItem(item, navigate))]);\n    } else if (data && data.data.length < PAGE_SIZE) {\n      setHasMore(false);\n    }\n  }, [data, pageNumber]);\n\n  return {\n    isFetching,\n    hasMore,\n    items,\n    refetch,\n    handleLastItem,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"RenderList-module_list-BF_R0\",\"listGrid\":\"RenderList-module_listGrid-VEEh9\",\"listItem\":\"RenderList-module_listItem-d2Xxn\"};","import React, { forwardRef, memo } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport styles from './RenderList.module.scss';\n\nexport interface IRenderListProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n  onLastItemChanged: (key: string) => void;\n}\n\nexport const RenderList: React.FC<IRenderListProps> = ({\n  isGrid,\n  items,\n  lastItemRef,\n  onLastItemChanged,\n}) => {\n  if (items.length === 0) {\n    return <div className={styles.empty}>No items to display</div>;\n  }\n\n  return (\n    <ul className={`${styles.list} ${isGrid ? styles.listGrid : ''}`}>\n      {items.map((item, index) => (\n        <ItemMemo\n          key={item.key}\n          item={item}\n          ref={setRefForLast({ items, index, lastItemRef, onLastItemChanged })}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype ListItemProps = {\n  item: IRenderItem;\n};\n\nconst ItemRef = forwardRef<HTMLLIElement, ListItemProps>(({ item }, ref) => (\n  <li id={item.key} ref={ref} className={styles.listItem}>\n    {item.render()}\n  </li>\n));\nItemRef.displayName = 'ItemRef';\n\nconst ItemMemo = memo(ItemRef);\n\nconst setRefForLast = ({\n  items,\n  index,\n  lastItemRef,\n  onLastItemChanged,\n}: {\n  items: IRenderItem[];\n  index: number;\n  onLastItemChanged: (key: string) => void;\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n}) => {\n  return (element: HTMLLIElement | null) => {\n    if (index === items.length - 1 && lastItemRef) {\n      lastItemRef.current = element;\n      onLastItemChanged(items[items.length - 1].key);\n    }\n  };\n};\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport { RenderList } from './RenderList';\n\nexport interface IRenderListObserverProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  onLastItem: () => void;\n}\n\nconst RenderListObserver: React.FC<IRenderListObserverProps> = ({ isGrid, items, onLastItem }) => {\n  const [lastItemKey, setLastItemKey] = useState('');\n  const prevLastItemKey = useRef('');\n  const lastItemRef = useRef<HTMLLIElement | null>(null);\n  const hasCalledOnLastItem = useRef(false);\n\n  const handleIntersection = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      const entry = entries[0];\n      if (entry?.isIntersecting && !hasCalledOnLastItem.current) {\n        hasCalledOnLastItem.current = true;\n        onLastItem();\n      }\n    },\n    [onLastItem],\n  );\n\n  useEffect(() => {\n    if (lastItemKey === prevLastItemKey.current) {\n      return;\n    } else {\n      prevLastItemKey.current = lastItemKey;\n    }\n\n    const observer = new IntersectionObserver(handleIntersection, { threshold: 0.5 });\n\n    const currentLastItem = lastItemRef.current;\n    if (currentLastItem) {\n      observer.observe(currentLastItem);\n    }\n\n    return () => {\n      if (currentLastItem) {\n        observer.unobserve(currentLastItem);\n      }\n    };\n  }, [handleIntersection, lastItemKey]);\n\n  useEffect(() => {\n    hasCalledOnLastItem.current = false;\n  }, [lastItemKey]);\n\n  return (\n    <RenderList\n      isGrid={isGrid}\n      items={items}\n      lastItemRef={lastItemRef}\n      onLastItemChanged={setLastItemKey}\n    />\n  );\n};\n\nexport default RenderListObserver;\n","import { Divider, Spin } from 'antd';\nimport { Category, useGetCategoriesQuery } from 'src/entities/Category';\nimport { convertToIRenderItem } from 'src/entities/Category/ui/convertToIRenderItem';\nimport { ROUTES } from 'src/shared/config/routes';\nimport { usePaginatedData } from 'src/shared/hooks/usePaginationData';\nimport RenderListObserver from 'src/shared/ui/RenderList/RenderListObserver';\nimport styles from './CategoryList.module.scss';\n\nconst CategoryList: React.FC = () => {\n  const { hasMore, isFetching, items, handleLastItem } = usePaginatedData<Category>(\n    useGetCategoriesQuery,\n    (category, navigate) =>\n      convertToIRenderItem({\n        category,\n        onClick: () => navigate(`${ROUTES.products.basePath}${category.id}`),\n      }),\n  );\n\n  return (\n    <div className={styles.container}>\n      <RenderListObserver isGrid={true} items={items} onLastItem={handleLastItem} />\n      {!hasMore && <p className={styles.end}>Все категории загружены</p>}\n      {isFetching && <Divider />}\n      {isFetching && <Spin />}\n    </div>\n  );\n};\n\nexport default CategoryList;\n","import { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\nimport { CategoryCard } from './CategoryCard';\nimport { Category } from '../types/category';\n\ninterface ConvertProps {\n  category: Category;\n  onClick?: (id: string) => void;\n  onEdit?: (id: string) => void;\n  onDelete?: (id: string) => void;\n}\n\nexport const convertToIRenderItem = ({\n  category,\n  onClick,\n  onEdit,\n  onDelete,\n}: ConvertProps): IRenderItem => ({\n  key: category.id,\n  render: () => (\n    <CategoryCard\n      category={category}\n      onClick={onClick ? () => onClick(category.id) : undefined}\n      onEdit={onEdit ? () => onEdit(category.id) : undefined}\n      onRemove={onDelete ? () => onDelete(category.id) : undefined}\n    />\n  ),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CategoryList-module_container-JHTbf\",\"end\":\"CategoryList-module_end-M57dM\"};","import CategoryList from 'src/features/CategoryList/ui/CategoryList';\n\nconst CategoryPage: React.FC = () => {\n  return <CategoryList />;\n};\n\nexport default CategoryPage;\n","import { useEffect } from 'react';\nimport { FormInstance } from 'antd';\nimport { useMessage } from 'src/shared/hooks/useMessage';\nimport { extractFormErrors, extractWithoutFiledErrors, throwIfGlobalError } from './errorParser';\n\nexport interface UseErrorHandlerProps<TFields> {\n  error: unknown;\n  form?: FormInstance<TFields>;\n}\n\nexport const useErrorHandler = <TFields>({ form, error }: UseErrorHandlerProps<TFields>) => {\n  const { showError } = useMessage();\n\n  useEffect(() => {\n    if (error) {\n      throwIfGlobalError(error);\n\n      if (form) {\n        form.setFields(extractFormErrors(error));\n      }\n\n      const joinedMessage = extractWithoutFiledErrors(error);\n      if (joinedMessage) {\n        showError(joinedMessage);\n      }\n    }\n  }, [error, form]);\n};\n","import { useContext } from 'react';\nimport { MessageContext } from 'src/shared/providers/MessageContext';\n\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('useMessage должен использоваться внутри <MessageProvider>');\n  }\n  return context;\n};\n"],"names":["CategoryCard","category","onClick","onRemove","onEdit","handleButtonClick","e","preventDefault","stopPropagation","buttonType","currentTarget","dataset","type","className","photo","preview","src","alt","name","datatype","danger","RenderList","isGrid","items","lastItemRef","onLastItemChanged","length","empty","list","listGrid","map","item","index","ItemMemo","ref","setRefForLast","key","ItemRef","forwardRef","id","listItem","render","displayName","memo","element","current","onLastItem","lastItemKey","setLastItemKey","useState","prevLastItemKey","useRef","hasCalledOnLastItem","handleIntersection","useCallback","entries","entry","isIntersecting","useEffect","observer","IntersectionObserver","threshold","currentLastItem","observe","unobserve","hasMore","isFetching","handleLastItem","fetchFunction","loadedPages","pageNumber","setPageNumber","setHasMore","setItems","data","isLoading","error","refetch","pagination","pageSize","skip","includes","useErrorHandler","u","navigate","prev","push","onDelete","undefined","convertToIRenderItem","products","basePath","convertItem","usePaginatedData","form","showError","setFields","joinedMessage","useMessage","context","useContext","Error"],"sourceRoot":""}