{"version":3,"file":"925.74057262a9d497f52559.js","mappings":"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","sources":["webpack://app-store/./src/entities/Category/ui/CategoryCard.module.scss?19e6","webpack://app-store/./src/entities/Category/ui/CategoryCard.tsx","webpack://app-store/./src/features/forms/CategoryForm/lib/getCategoryRules.ts","webpack://app-store/./src/features/forms/CategoryForm/model/useUpdate.ts","webpack://app-store/./src/features/forms/CategoryForm/ui/CategoryForm.tsx","webpack://app-store/./src/features/forms/CategoryForm/model/useGet.ts","webpack://app-store/./src/features/forms/CategoryForm/model/useCreate.ts","webpack://app-store/./src/widgets/editors/CategoryEditor/ui/CategoryEditor.tsx","webpack://app-store/./src/widgets/editors/CategoryEditor/ui/CategoryEditor.module.scss?66f5","webpack://app-store/./src/pages/CategoryEditPage/CategoryEditPage.tsx","webpack://app-store/./src/pages/CategoryEditPage/CategoryEditPage.module.scss?850f","webpack://app-store/./src/shared/api/errors/useErrorHandler.ts","webpack://app-store/./src/shared/hooks/useMessage.ts","webpack://app-store/./src/shared/hooks/useSuccessHandler.ts","webpack://app-store/./src/shared/ui/RenderList/RenderList.module.scss?5ddc","webpack://app-store/./src/shared/ui/RenderList/RenderList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CategoryCard-module_card-tskRF\",\"cardTop\":\"CategoryCard-module_cardTop-zwy1m\",\"cardImage\":\"CategoryCard-module_cardImage-pBC6p\",\"cardLabel\":\"CategoryCard-module_cardLabel-Ktib8\",\"cardBottom\":\"CategoryCard-module_cardBottom-iovfo\",\"cardPrices\":\"CategoryCard-module_cardPrices-FIfKO\",\"cardPrice\":\"CategoryCard-module_cardPrice-jcayE\",\"cardPriceDiscount\":\"CategoryCard-module_cardPriceDiscount-HXG0p\",\"cardPriceCommon\":\"CategoryCard-module_cardPriceCommon-Z3N5g\",\"cardTitle\":\"CategoryCard-module_cardTitle-C0cLW\",\"cardAdd\":\"CategoryCard-module_cardAdd-N5ROw\"};","import { ReactNode } from 'react';\nimport empty from 'src/shared/assets/images/empty.png';\nimport styles from './CategoryCard.module.scss';\nimport { Category } from '../types/category';\n\ninterface CategoryCardProps {\n  category: Category;\n  onClick?: () => void;\n  footer?: () => ReactNode;\n}\n\nexport const CategoryCard: React.FC<CategoryCardProps> = ({ category, onClick, footer }) => {\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>): void => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (onClick) onClick();\n  };\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.cardTop}>\n        <a href=\"#\" onClick={handleClick} className={styles.cardImage}>\n          <img src={category.photo ? category.photo : empty} alt={category.name} />\n        </a>\n      </div>\n      <div className={styles.cardBottom}>\n        <a href=\"#\" onClick={handleClick} className={styles.cardTitle}>\n          {category.name}\n        </a>\n        {footer && footer()}\n      </div>\n    </div>\n  );\n};\n","import { Rule } from 'antd/es/form';\nimport { FieldType } from '../types/fields';\n\nexport type AllowedFields = Exclude<keyof FieldType, 'id'>;\n\nexport const getCategoryRules = (field: AllowedFields) => {\n  const rules: Record<AllowedFields, Rule[]> = {\n    name: [\n      { required: true, message: 'Please enter a name' },\n      { min: 3, max: 20, message: 'Name must be between 3 and 20 characters' },\n      {\n        pattern: /^[a-zA-Z0-9\\s]+$/,\n        message: 'Name can only contain letters, numbers, and spaces',\n      },\n    ],\n    photo: [\n      {\n        pattern: /^(https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|webp|svg))$/i,\n        message: 'Invalid photo URL',\n        validateTrigger: 'onSubmit',\n      },\n    ],\n  };\n\n  return rules[field];\n};\n","import { FormInstance } from 'antd';\nimport { useUpdateCategoryMutation } from 'src/entities/Category';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { useSuccessHandler } from 'src/shared/hooks/useSuccessHandler';\nimport { FieldType } from '../types/fields';\n\nexport const useUpdate = (form: FormInstance<FieldType>) => {\n  const [updateCategory, { isLoading: isUpdating, isSuccess: isUpdateSuccess, error }] =\n    useUpdateCategoryMutation();\n  useErrorHandler({ form, error });\n  useSuccessHandler({\n    isSuccess: isUpdateSuccess,\n    mess: 'Data saved successfully',\n  });\n\n  const update = async () => {\n    const updateBody = form.getFieldsValue();\n    await updateCategory(updateBody);\n  };\n\n  return {\n    update,\n    isUpdating,\n    isUpdateSuccess,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { Button, Form, Input, Spin } from 'antd';\nimport { getCategoryRules } from '../lib/getCategoryRules';\nimport { useCreate } from '../model/useCreate';\nimport { useGet } from '../model/useGet';\nimport { useUpdate } from '../model/useUpdate';\nimport { FieldType } from '../types/fields';\n\nexport const Actions = {\n  create: 'create',\n  update: 'update',\n} as const;\n\nexport type Action = (typeof Actions)[keyof typeof Actions];\n\ninterface CategoryFormProps {\n  action: Action;\n  categoryId: string;\n  onCreated: () => void;\n}\n\nexport const CategoryForm: React.FC<CategoryFormProps> = ({ action, categoryId, onCreated }) => {\n  const [isChanges, setIsChanges] = useState(action === Actions.create);\n  const [form] = Form.useForm();\n  const { data, isFetching } = useGet(action === Actions.create, categoryId, form);\n  const { update, isUpdating, isUpdateSuccess } = useUpdate(form);\n  const { create, isCreating, isCreatingSuccess } = useCreate(form);\n\n  useEffect(() => {\n    if (data) {\n      form.setFieldsValue(data.data[0]);\n    }\n  }, [data, form]);\n\n  useEffect(() => {\n    if (isCreatingSuccess) {\n      onCreated();\n    }\n  }, [isCreatingSuccess, onCreated]);\n\n  useEffect(() => {\n    if (isUpdateSuccess) {\n      setIsChanges(false);\n    }\n  }, [isUpdateSuccess]);\n\n  return (\n    <Form\n      form={form}\n      name=\"CategoryForm\"\n      labelAlign=\"left\"\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      onFinish={action === Actions.update ? update : create}\n      autoComplete=\"off\"\n    >\n      <Form.Item<FieldType> label=\"Id\" name=\"id\">\n        <Input readOnly hidden={action === Actions.create} />\n      </Form.Item>\n\n      <Form.Item<FieldType> label=\"Name\" name=\"name\" rules={getCategoryRules('name')}>\n        <Input onChange={() => setIsChanges(true)} placeholder=\"Snowboarding\" />\n      </Form.Item>\n\n      <Form.Item<FieldType> label=\"Photo source\" name=\"photo\" rules={getCategoryRules('photo')}>\n        <Input onChange={() => setIsChanges(true)} placeholder=\"URL or file path\" />\n      </Form.Item>\n\n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        style={{ width: '100%' }}\n        disabled={isFetching || isUpdating || !isChanges}\n      >\n        {isUpdating || isCreating ? <Spin /> : action === Actions.update ? 'Save' : 'Create'}\n      </Button>\n    </Form>\n  );\n};\n","import { FormInstance } from 'antd';\nimport { useGetCategoriesQuery } from 'src/entities/Category';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { FieldType } from '../types/fields';\n\nexport const useGet = (skip: boolean, categoryId: string, form: FormInstance<FieldType>) => {\n  const { data, refetch, isFetching, isSuccess, error } = useGetCategoriesQuery(\n    {\n      ids: [categoryId],\n    },\n    { skip },\n  );\n  useErrorHandler({ form, error });\n\n  return {\n    data,\n    refetch,\n    isFetching,\n    isSuccess,\n  };\n};\n","import { FormInstance } from 'antd';\nimport { useCreateCategoryMutation } from 'src/entities/Category';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { useSuccessHandler } from 'src/shared/hooks/useSuccessHandler';\nimport { FieldType } from '../types/fields';\n\nexport const useCreate = (form: FormInstance<FieldType>) => {\n  const [createCategory, { isLoading: isCreating, isSuccess: isCreatingSuccess, error }] =\n    useCreateCategoryMutation();\n  useErrorHandler({ form, error });\n  useSuccessHandler({\n    isSuccess: isCreatingSuccess,\n    mess: 'Category created successfully',\n  });\n\n  const create = async () => {\n    const updateBody = form.getFieldsValue();\n    await createCategory(updateBody);\n  };\n\n  return {\n    create,\n    isCreating,\n    isCreatingSuccess,\n  };\n};\n","import { useCallback, useState } from 'react';\nimport { Button, Divider, Modal, Space, Spin } from 'antd';\nimport {\n  Category,\n  CategoryCard,\n  useDeleteCategoryMutation,\n  useGetAllCategoriesQuery,\n} from 'src/entities/Category';\nimport { Action, Actions, CategoryForm } from 'src/features/forms/CategoryForm/ui/CategoryForm';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { useSuccessHandler } from 'src/shared/hooks/useSuccessHandler';\nimport { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\nimport { RenderList } from 'src/shared/ui/RenderList/RenderList';\nimport styles from './CategoryEditor.module.scss';\n\ninterface ConvertProps {\n  category: Category;\n  onClick?: (id: string) => void;\n}\n\nexport const CategoryEditor: React.FC = () => {\n  const [actionCategory, setActionCategory] = useState<{\n    action: Action;\n    category: Category;\n  } | null>(null);\n  const { data, error: getAllError } = useGetAllCategoriesQuery();\n  const [deleteCategory, { isLoading: isDeleting, isSuccess, error }] = useDeleteCategoryMutation();\n  useErrorHandler({ error: getAllError });\n  useErrorHandler({ error });\n  useSuccessHandler({ isSuccess, mess: 'Category delete successfully' });\n\n  const footerItem = useCallback(\n    (category: Category) => {\n      return (\n        <Space style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <Button\n            onClick={() => {\n              setActionCategory({ action: Actions.update, category });\n            }}\n          >\n            Edit\n          </Button>\n          <Button danger onClick={async () => await deleteCategory(category.id)}>\n            Delete\n          </Button>\n        </Space>\n      );\n    },\n    [deleteCategory],\n  );\n\n  const convertCategoryToItem = useCallback(\n    ({ category, onClick }: ConvertProps): IRenderItem => ({\n      key: category.id,\n      render: () => (\n        <CategoryCard\n          category={category}\n          onClick={onClick ? () => onClick(category.id) : undefined}\n          footer={() => (footerItem ? footerItem(category) : undefined)}\n        />\n      ),\n    }),\n    [footerItem],\n  );\n\n  const items = data?.data.map((category) => convertCategoryToItem({ category })) ?? [];\n\n  const handleCreate = () => {\n    setActionCategory({\n      action: Actions.create,\n      category: {\n        id: '',\n        name: '',\n        commandId: '',\n        createdAt: new Date(Date.now()),\n        updatedAt: new Date(Date.now()),\n      },\n    });\n  };\n\n  const handleCreated = () => {\n    setActionCategory(null);\n  };\n\n  return (\n    <div className={styles.container}>\n      {actionCategory && (\n        <Modal\n          title={<p>Edit category</p>}\n          open={Boolean(actionCategory)}\n          loading={false}\n          onCancel={() => setActionCategory(null)}\n          footer={<></>}\n        >\n          <CategoryForm\n            action={actionCategory!.action}\n            categoryId={actionCategory!.category.id}\n            onCreated={handleCreated}\n          />\n        </Modal>\n      )}\n      <div>\n        <Button onClick={handleCreate}>Create new category</Button>\n      </div>\n      <Divider />\n      {isDeleting && <Spin />}\n      {isDeleting && <Divider />}\n      <RenderList items={items} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CategoryEditor-module_container-Jbx0A\"};","import { CategoryEditor } from 'src/widgets/editors/CategoryEditor';\nimport styles from './CategoryEditPage.module.scss';\n\nconst CategoryPage: React.FC = () => {\n  return (\n    <div className={styles.page}>\n      <CategoryEditor />\n    </div>\n  );\n};\n\nexport default CategoryPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"CategoryEditPage-module_page-alh3f\"};","import { useEffect } from 'react';\nimport { FormInstance } from 'antd';\nimport { useMessage } from 'src/shared/hooks/useMessage';\nimport { extractFormErrors, extractWithoutFiledErrors, throwIfGlobalError } from './errorParser';\n\nexport interface UseErrorHandlerProps<TFields> {\n  error: unknown;\n  form?: FormInstance<TFields>;\n}\n\nexport const useErrorHandler = <TFields>({ form, error }: UseErrorHandlerProps<TFields>) => {\n  const { showError } = useMessage();\n\n  useEffect(() => {\n    if (error) {\n      throwIfGlobalError(error);\n\n      if (form) {\n        form.setFields(extractFormErrors(error));\n      }\n\n      const joinedMessage = extractWithoutFiledErrors(error);\n      if (joinedMessage) {\n        showError(joinedMessage);\n      }\n    }\n  }, [error, form, showError]);\n};\n","import { useContext } from 'react';\nimport { MessageContext } from 'src/shared/providers/MessageContext';\n\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('useMessage должен использоваться внутри <MessageProvider>');\n  }\n  return context;\n};\n","import { useEffect } from 'react';\nimport { useMessage } from './useMessage';\n\ninterface UseSuccessHandlerProps {\n  isSuccess: boolean;\n  mess: string;\n}\n\nexport const useSuccessHandler = ({ isSuccess, mess }: UseSuccessHandlerProps) => {\n  const { showSuccess } = useMessage();\n\n  useEffect(() => {\n    if (isSuccess) {\n      showSuccess(mess);\n    }\n  }, [isSuccess, mess, showSuccess]);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"RenderList-module_list-BF_R0\",\"listGrid\":\"RenderList-module_listGrid-VEEh9\",\"listItem\":\"RenderList-module_listItem-d2Xxn\",\"empty\":\"RenderList-module_empty-VeKxm\"};","import React, { forwardRef, memo } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport styles from './RenderList.module.scss';\n\nexport interface IRenderListProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n  onLastItemChanged?: (key: string) => void;\n}\n\nexport const RenderList: React.FC<IRenderListProps> = ({\n  isGrid,\n  items,\n  lastItemRef,\n  onLastItemChanged,\n}) => {\n  if (items.length === 0) {\n    return <div className={styles.empty}>No items to display</div>;\n  }\n\n  return (\n    <ul className={isGrid === undefined || isGrid ? styles.listGrid : styles.list}>\n      {items.map((item, index) => (\n        <ItemMemo\n          key={item.key}\n          item={item}\n          ref={setRefForLast({ items, index, lastItemRef, onLastItemChanged })}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype ListItemProps = {\n  item: IRenderItem;\n};\n\nconst ItemRef = forwardRef<HTMLLIElement, ListItemProps>(({ item }, ref) => (\n  <li id={item.key} ref={ref} className={styles.listItem}>\n    {item.render()}\n  </li>\n));\nItemRef.displayName = 'ItemRef';\n\nconst ItemMemo = memo(ItemRef);\n\nconst setRefForLast = ({\n  items,\n  index,\n  lastItemRef,\n  onLastItemChanged,\n}: {\n  items: IRenderItem[];\n  index: number;\n  onLastItemChanged?: (key: string) => void;\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n}) => {\n  return (element: HTMLLIElement | null) => {\n    if (index === items.length - 1 && lastItemRef) {\n      lastItemRef.current = element;\n      if (onLastItemChanged) {\n        onLastItemChanged(items[items.length - 1].key);\n      }\n    }\n  };\n};\n"],"names":["CategoryCard","category","onClick","footer","handleClick","e","preventDefault","stopPropagation","className","href","src","photo","empty","alt","name","getCategoryRules","field","required","message","min","max","pattern","validateTrigger","Actions","CategoryForm","action","categoryId","onCreated","isChanges","setIsChanges","useState","form","useForm","data","isFetching","skip","refetch","isSuccess","error","ids","useErrorHandler","u","useGet","update","isUpdating","isUpdateSuccess","updateCategory","isLoading","useSuccessHandler","mess","updateBody","getFieldsValue","useUpdate","create","isCreating","isCreatingSuccess","createCategory","useCreate","useEffect","setFieldsValue","labelAlign","labelCol","span","wrapperCol","onFinish","autoComplete","Item","label","readOnly","hidden","rules","onChange","placeholder","type","htmlType","style","width","disabled","CategoryEditor","actionCategory","setActionCategory","getAllError","deleteCategory","isDeleting","footerItem","useCallback","display","justifyContent","alignItems","danger","id","convertCategoryToItem","key","render","Category","undefined","items","map","title","open","Boolean","loading","onCancel","commandId","createdAt","Date","now","updatedAt","RenderList","showError","setFields","joinedMessage","useMessage","context","useContext","Error","showSuccess","isGrid","lastItemRef","onLastItemChanged","length","item","index","ItemMemo","ref","setRefForLast","ItemRef","forwardRef","displayName","memo","element","current"],"sourceRoot":""}