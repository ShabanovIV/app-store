{"version":3,"file":"434.3dd38253c4d60cb290fd.js","mappings":"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","sources":["webpack://app-store/./src/features/SignInForm/model/useSignIn.ts","webpack://app-store/./src/features/SignInForm/ui/SignInForm.tsx","webpack://app-store/./src/features/SignUpForm/model/useSignUp.ts","webpack://app-store/./src/features/SignUpForm/ui/SignUpForm.tsx","webpack://app-store/./src/shared/ui/LocalErrorBoundary/LocalErrorBoundary.tsx","webpack://app-store/./src/shared/ui/LocalErrorBoundary/LocalErrorBoundary.module.scss?440c","webpack://app-store/./src/widgets/AuthSwitcher/ui/AuthSwitcher.module.scss?1167","webpack://app-store/./src/widgets/AuthSwitcher/ui/AuthSwitcher.tsx","webpack://app-store/./src/pages/AuthPage/AuthPage.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useSigninMutation } from 'src/entities/User';\nimport { parseErrorAndThrow } from 'src/shared/api/errors';\n\nexport const useSignIn = () => {\n  const [signin, { isLoading, isSuccess, isError, error }] = useSigninMutation();\n\n  const signIn = async (email: string, password: string) => {\n    await signin({ email, password });\n  };\n\n  useEffect(() => {\n    if (isError && error) {\n      parseErrorAndThrow(error);\n    }\n  }, [isError, error]);\n\n  return {\n    signIn,\n    isLoading,\n    isSuccess,\n  };\n};\n","import { useEffect } from 'react';\nimport { Button, Form, FormProps, Input, Spin } from 'antd';\nimport { useSignIn } from '../model/useSignIn';\n\ninterface SignInFormProps {\n  onSuccess: () => void;\n}\n\ntype FieldType = {\n  email?: string;\n  password?: string;\n};\n\nexport const SignInForm: React.FC<SignInFormProps> = ({ onSuccess }) => {\n  const { signIn, isLoading, isSuccess } = useSignIn();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (isSuccess) {\n      onSuccess();\n    }\n  }, [isSuccess]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = (values) => {\n    if (values.email && values.password) {\n      signIn(values.email, values.password);\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"SignInForm\"\n      labelCol={{ span: 8 }}\n      labelAlign=\"left\"\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item<FieldType>\n        label=\"Email\"\n        name=\"email\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item<FieldType>\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item label={null}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n      {isLoading && <Spin>Loading...</Spin>}\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSignupMutation } from 'src/entities/User';\nimport { parseErrorAndThrow } from 'src/shared/api/errors';\n\nexport const useSignUp = () => {\n  const [signup, { isLoading, isSuccess, isError, error }] = useSignupMutation();\n\n  const signUp = async (email: string, password: string) => {\n    await signup({ email, password });\n  };\n\n  useEffect(() => {\n    if (isError && error) {\n      parseErrorAndThrow(error);\n    }\n  }, [isError, error]);\n\n  return {\n    signUp,\n    isLoading,\n    isSuccess,\n  };\n};\n","import { useEffect } from 'react';\nimport { Button, Form, FormProps, Input, Spin } from 'antd';\nimport { useSignUp } from '../model/useSignUp';\n\ninterface SignUpFormProps {\n  onSuccess: () => void;\n}\n\ntype FieldType = {\n  email?: string;\n  password?: string;\n};\n\nexport const SignUpForm: React.FC<SignUpFormProps> = ({ onSuccess }) => {\n  const { signUp, isLoading, isSuccess } = useSignUp();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (isSuccess) {\n      onSuccess();\n    }\n  }, [isSuccess]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = (values) => {\n    if (values.email && values.password) {\n      signUp(values.email, values.password);\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"SignUpForm\"\n      labelAlign=\"left\"\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item<FieldType>\n        label=\"Email\"\n        name=\"email\"\n        rules={[{ required: true, message: 'Please input your email!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item<FieldType>\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item label={null}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n      {isLoading && <Spin>Loading...</Spin>}\n    </Form>\n  );\n};\n","import { Component, ReactNode } from 'react';\nimport { Alert } from 'antd';\nimport {\n  ErrorCode,\n  includeCode as includeCodes,\n  isServerErrors,\n  joinErrors,\n} from 'src/shared/api/errors';\nimport styles from './LocalErrorBoundary.module.scss';\n\ninterface LocalErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface LocalErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class LocalErrorBoundary extends Component<\n  LocalErrorBoundaryProps,\n  LocalErrorBoundaryState\n> {\n  state: LocalErrorBoundaryState = {\n    hasError: false,\n    error: null,\n  };\n\n  static getDerivedStateFromError(error: unknown): LocalErrorBoundaryState {\n    const codesLocal: ErrorCode[] = Object.values(ErrorCode).filter(\n      (code) => code !== ErrorCode.ERR_INTERNAL_SERVER,\n    );\n\n    if (isServerErrors(error) && !includeCodes(error, codesLocal)) {\n      throw error;\n    }\n\n    const message = isServerErrors(error) ? joinErrors(error) : 'Unknown error.';\n\n    return { hasError: true, error: new Error(message) };\n  }\n\n  handleDismiss = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    return (\n      <div className={styles.errorWrapper}>\n        {this.state.hasError && (\n          <Alert\n            className={styles.errorAlert}\n            closable\n            onClose={this.handleDismiss}\n            type=\"error\"\n            message={this.state.error?.message || 'Unknown error.'}\n            showIcon\n          />\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"errorWrapper\":\"LocalErrorBoundary-module_errorWrapper-jRvGF\",\"errorAlert\":\"LocalErrorBoundary-module_errorAlert-IiYuv\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AuthSwitcher-module_container-p7e0L\",\"authCard\":\"AuthSwitcher-module_authCard-TUn7g\",\"title\":\"AuthSwitcher-module_title-um9uJ\"};","import { useState } from 'react';\nimport { Button, Card, Space, Typography, Divider } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { SignInForm } from 'src/features/SignInForm';\nimport { SignUpForm } from 'src/features/SignUpForm';\nimport { LocalErrorBoundary } from 'src/shared/ui/LocalErrorBoundary/LocalErrorBoundary';\nimport styles from './AuthSwitcher.module.scss';\n\nconst { Title, Text } = Typography;\n\nexport const AuthSwitcher: React.FC = () => {\n  const [isSignIn, setIsSignIn] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleClick = () => {\n    setIsSignIn((prev) => !prev);\n  };\n\n  const handleSuccess = () => {\n    const from = location.state?.from || '/';\n    navigate(from, { replace: true });\n  };\n\n  return (\n    <Space direction=\"vertical\" align=\"center\" className={styles.container}>\n      <LocalErrorBoundary key={isSignIn ? 'signin_err_boundary' : 'signup_err_boundary'}>\n        <Card className={styles.authCard}>\n          <Title level={3} className={styles.title}>\n            {isSignIn ? 'Sign In' : 'Sign Up'}\n          </Title>\n\n          {isSignIn ? (\n            <SignInForm onSuccess={handleSuccess} />\n          ) : (\n            <SignUpForm onSuccess={handleSuccess} />\n          )}\n\n          <Divider />\n\n          <Space direction=\"vertical\" align=\"center\" style={{ width: '100%' }}>\n            <Text type=\"secondary\">\n              {isSignIn ? \"Don't have an account?\" : 'Already have an account?'}\n            </Text>\n            <Button type=\"link\" onClick={handleClick}>\n              {isSignIn ? 'Join' : 'Sign In'}\n            </Button>\n          </Space>\n        </Card>\n      </LocalErrorBoundary>\n    </Space>\n  );\n};\n","import { AuthSwitcher } from 'src/widgets/AuthSwitcher/';\n\nconst AuthPage: React.FC = () => {\n  return <AuthSwitcher />;\n};\n\nexport default AuthPage;\n"],"names":["SignInForm","onSuccess","signIn","isLoading","isSuccess","signin","isError","error","useEffect","email","password","useSignIn","form","useForm","name","labelCol","span","labelAlign","wrapperCol","style","maxWidth","initialValues","remember","onFinish","values","autoComplete","Item","label","rules","required","message","Password","type","htmlType","SignUpForm","signUp","signup","useSignUp","LocalErrorBoundary","Component","hasError","this","setState","getDerivedStateFromError","codesLocal","Object","filter","code","ERR_INTERNAL_SERVER","Error","render","className","state","A","closable","onClose","handleDismiss","showIcon","props","children","Title","Text","AuthSwitcher","isSignIn","setIsSignIn","useState","navigate","location","handleSuccess","from","replace","direction","align","level","width","onClick","prev"],"sourceRoot":""}