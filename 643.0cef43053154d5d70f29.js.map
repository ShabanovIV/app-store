{"version":3,"file":"643.0cef43053154d5d70f29.js","mappings":"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","sources":["webpack://app-store/./src/features/ProductList/model/convertToItem.tsx","webpack://app-store/./src/features/ProductList/ui/ProductList.tsx","webpack://app-store/./src/features/ProductList/model/useProductPaginateData.ts","webpack://app-store/./src/features/ProductList/ui/ProductList.module.scss?e0d1","webpack://app-store/./src/pages/ProductPage/ProductPage.tsx","webpack://app-store/./src/shared/api/errors/useErrorHandler.ts","webpack://app-store/./src/shared/hooks/useMessage.ts","webpack://app-store/./src/shared/ui/RenderList/RenderList.module.scss?5ddc","webpack://app-store/./src/shared/ui/RenderList/RenderList.tsx","webpack://app-store/./src/shared/ui/RenderList/RenderListObserver.tsx"],"sourcesContent":["import { Product, ProductCard } from 'src/entities/Product';\nimport AddToCart from 'src/features/Cart/ui/AddToCart';\nimport { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\n\nexport const convertToItem = (product: Product): IRenderItem => ({\n  key: product.id,\n  render: () => (\n    <ProductCard product={product} footer={() => <AddToCart productId={product.id} />} />\n  ),\n});\n","import { Divider, Space, Spin } from 'antd';\nimport RenderListObserver from 'src/shared/ui/RenderList/RenderListObserver';\nimport styles from './ProductList.module.scss';\nimport { useProductPaginateData } from '../model/useProductPaginateData';\n\ninterface ProductListProps {\n  categoryId: string;\n}\n\nexport const ProductList: React.FC<ProductListProps> = ({ categoryId }) => {\n  const { hasMore, isFetching, items, handleLastItem } = useProductPaginateData(categoryId);\n\n  return (\n    <div className={styles.container}>\n      <RenderListObserver items={items} onLastItem={handleLastItem} />\n      {(isFetching || !hasMore) && <Divider />}\n      {!hasMore && <Space className={styles.end}>Все продукты загружены</Space>}\n      {isFetching && <Spin />}\n    </div>\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetProductsQuery } from 'src/entities/Product';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\nimport { convertToItem } from './convertToItem';\n\nconst PAGE_SIZE = 10;\n\nexport const useProductPaginateData = (categoryId: string) => {\n  const navigate = useNavigate();\n  const loadedPages = useRef<number[]>([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [items, setItems] = useState<IRenderItem[]>([]);\n  const { data, isFetching, isLoading, error, refetch } = useGetProductsQuery(\n    {\n      categoryIds: [categoryId],\n      pagination: { pageSize: PAGE_SIZE, pageNumber: pageNumber },\n      sorting: { type: 'ASC', field: 'createdAt' },\n    },\n    {\n      skip: pageNumber === 0 || loadedPages.current.includes(pageNumber),\n      refetchOnMountOrArgChange: true,\n    },\n  );\n\n  useErrorHandler({ error });\n\n  const handleLastItem = useCallback(() => {\n    if (!hasMore || isFetching) return;\n    setPageNumber((prev) => prev + 1);\n  }, [hasMore, isFetching]);\n\n  useEffect(() => {\n    if (isLoading && isFetching) {\n      setItems([]);\n    }\n  }, [isFetching, isLoading]);\n\n  useEffect(() => {\n    if (\n      data &&\n      data.data.length > 0 &&\n      !loadedPages.current.includes(pageNumber) &&\n      data.pagination.pageNumber === pageNumber\n    ) {\n      loadedPages.current.push(pageNumber);\n      setItems((prev) => [...prev, ...data.data.map((product) => convertToItem(product))]);\n    } else if (data && data.data.length < PAGE_SIZE) {\n      setHasMore(false);\n    }\n  }, [data, navigate, pageNumber]);\n\n  return {\n    isFetching,\n    hasMore,\n    items,\n    refetch,\n    handleLastItem,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProductList-module_container-N0fil\",\"end\":\"ProductList-module_end-mjnfC\"};","import { useParams } from 'react-router-dom';\nimport { ProductList } from 'src/features/ProductList';\n\nconst CategoryPage: React.FC = () => {\n  const { categoryId } = useParams<{ categoryId: string }>();\n  return <ProductList categoryId={categoryId!} />;\n};\n\nexport default CategoryPage;\n","import { useEffect } from 'react';\nimport { FormInstance } from 'antd';\nimport { useMessage } from 'src/shared/hooks/useMessage';\nimport { extractFormErrors, extractWithoutFiledErrors, throwIfGlobalError } from './errorParser';\n\nexport interface UseErrorHandlerProps<TFields> {\n  error: unknown;\n  form?: FormInstance<TFields>;\n}\n\nexport const useErrorHandler = <TFields>({ form, error }: UseErrorHandlerProps<TFields>) => {\n  const { showError } = useMessage();\n\n  useEffect(() => {\n    if (error) {\n      throwIfGlobalError(error);\n\n      if (form) {\n        form.setFields(extractFormErrors(error));\n      }\n\n      const joinedMessage = extractWithoutFiledErrors(error);\n      if (joinedMessage) {\n        showError(joinedMessage);\n      }\n    }\n  }, [error, form, showError]);\n};\n","import { useContext } from 'react';\nimport { MessageContext } from 'src/shared/providers/MessageContext';\n\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('useMessage должен использоваться внутри <MessageProvider>');\n  }\n  return context;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"RenderList-module_list-BF_R0\",\"listGrid\":\"RenderList-module_listGrid-VEEh9\",\"listItem\":\"RenderList-module_listItem-d2Xxn\",\"empty\":\"RenderList-module_empty-VeKxm\"};","import React, { forwardRef, memo } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport styles from './RenderList.module.scss';\n\nexport interface IRenderListProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n  onLastItemChanged?: (key: string) => void;\n}\n\nexport const RenderList: React.FC<IRenderListProps> = ({\n  isGrid,\n  items,\n  lastItemRef,\n  onLastItemChanged,\n}) => {\n  if (items.length === 0) {\n    return <div className={styles.empty}>No items to display</div>;\n  }\n\n  return (\n    <ul className={isGrid === undefined || isGrid ? styles.listGrid : styles.list}>\n      {items.map((item, index) => (\n        <ItemMemo\n          key={item.key}\n          item={item}\n          ref={setRefForLast({ items, index, lastItemRef, onLastItemChanged })}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype ListItemProps = {\n  item: IRenderItem;\n};\n\nconst ItemRef = forwardRef<HTMLLIElement, ListItemProps>(({ item }, ref) => (\n  <li id={item.key} ref={ref} className={styles.listItem}>\n    {item.render()}\n  </li>\n));\nItemRef.displayName = 'ItemRef';\n\nconst ItemMemo = memo(ItemRef);\n\nconst setRefForLast = ({\n  items,\n  index,\n  lastItemRef,\n  onLastItemChanged,\n}: {\n  items: IRenderItem[];\n  index: number;\n  onLastItemChanged?: (key: string) => void;\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n}) => {\n  return (element: HTMLLIElement | null) => {\n    if (index === items.length - 1 && lastItemRef) {\n      lastItemRef.current = element;\n      if (onLastItemChanged) {\n        onLastItemChanged(items[items.length - 1].key);\n      }\n    }\n  };\n};\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport { RenderList } from './RenderList';\n\nexport interface IRenderListObserverProps {\n  items: IRenderItem[];\n  onLastItem: () => void;\n}\n\nconst RenderListObserver: React.FC<IRenderListObserverProps> = ({ items, onLastItem }) => {\n  const [lastItemKey, setLastItemKey] = useState('');\n  const prevLastItemKey = useRef('');\n  const lastItemRef = useRef<HTMLLIElement | null>(null);\n  const hasCalledOnLastItem = useRef(false);\n\n  const handleIntersection = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      const entry = entries[0];\n      if (entry?.isIntersecting && !hasCalledOnLastItem.current) {\n        hasCalledOnLastItem.current = true;\n        onLastItem();\n      }\n    },\n    [onLastItem],\n  );\n\n  useEffect(() => {\n    if (lastItemKey === prevLastItemKey.current) {\n      return;\n    } else {\n      prevLastItemKey.current = lastItemKey;\n    }\n\n    const observer = new IntersectionObserver(handleIntersection, { threshold: 0.5 });\n\n    const currentLastItem = lastItemRef.current;\n    if (currentLastItem) {\n      observer.observe(currentLastItem);\n    }\n\n    return () => {\n      if (currentLastItem) {\n        observer.unobserve(currentLastItem);\n      }\n    };\n  }, [handleIntersection, lastItemKey]);\n\n  useEffect(() => {\n    hasCalledOnLastItem.current = false;\n  }, [lastItemKey]);\n\n  return <RenderList items={items} lastItemRef={lastItemRef} onLastItemChanged={setLastItemKey} />;\n};\n\nexport default RenderListObserver;\n"],"names":["ProductList","categoryId","hasMore","isFetching","items","handleLastItem","navigate","loadedPages","useRef","pageNumber","setPageNumber","useState","setHasMore","setItems","data","isLoading","error","refetch","categoryIds","pagination","pageSize","sorting","type","field","skip","current","includes","refetchOnMountOrArgChange","useErrorHandler","u","useCallback","prev","useEffect","length","push","map","product","key","id","render","Product","footer","AddToCart","A","productId","convertToItem","useProductPaginateData","className","RenderListObserver","onLastItem","form","showError","setFields","joinedMessage","useMessage","context","useContext","Error","RenderList","isGrid","lastItemRef","onLastItemChanged","undefined","item","index","ItemMemo","ref","setRefForLast","ItemRef","forwardRef","displayName","memo","element","lastItemKey","setLastItemKey","prevLastItemKey","hasCalledOnLastItem","handleIntersection","entries","entry","isIntersecting","observer","IntersectionObserver","threshold","currentLastItem","observe","unobserve"],"sourceRoot":""}