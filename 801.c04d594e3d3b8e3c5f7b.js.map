{"version":3,"file":"801.c04d594e3d3b8e3c5f7b.js","mappings":"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","sources":["webpack://app-store/./src/features/Profile/ui/ProfileForm.module.scss?638d","webpack://app-store/./src/features/Profile/model/useProfileUpdate.ts","webpack://app-store/./src/features/Profile/ui/ProfileForm.tsx","webpack://app-store/./src/features/Profile/model/useProfile.ts","webpack://app-store/./src/features/Profile/model/useProfilePassword.tsx","webpack://app-store/./src/features/Profile/ui/ProfilePwdForm.tsx","webpack://app-store/./src/widgets/ProfileSwitcher/ui/ProfileSwitcher.module.scss?4436","webpack://app-store/./src/widgets/ProfileSwitcher/ui/ProfileSwitcher.tsx","webpack://app-store/./src/pages/ProfilePage/ProfilePage.tsx","webpack://app-store/./src/shared/ui/LocalErrorBoundary/LocalErrorBoundary.tsx","webpack://app-store/./src/shared/ui/LocalErrorBoundary/LocalErrorBoundary.module.scss?440c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ProfileForm-module_card-f6NRp\",\"title\":\"ProfileForm-module_title-WDZs2\",\"actions\":\"ProfileForm-module_actions-nVFPo\",\"submitButton\":\"ProfileForm-module_submitButton-zbH7c\"};","import { useEffect } from 'react';\nimport { useUpdateProfileMutation } from 'src/entities/User';\nimport { parseErrorAndThrow } from 'src/shared/api/errors';\n\nexport const useProfileUpdate = () => {\n  const [updateProfile, { isLoading, isSuccess, isError, error }] = useUpdateProfileMutation();\n\n  const update = async (name: string) => {\n    await updateProfile({ name });\n  };\n\n  useEffect(() => {\n    if (isError && error) {\n      parseErrorAndThrow(error);\n    }\n  }, [isError, error]);\n\n  return {\n    update,\n    isLoading,\n    isSuccess,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { Button, Card, Form, FormProps, Input, Space, Spin } from 'antd';\nimport styles from './ProfileForm.module.scss';\nimport { useProfile } from '../model/useProfile';\nimport { useProfileUpdate } from '../model/useProfileUpdate';\n\ninterface ProfileFormProps {\n  onSuccess?: () => void;\n}\n\ntype FieldType = {\n  name: string;\n  email: string;\n  signUpDate: Date;\n};\n\nexport const ProfileForm: React.FC<ProfileFormProps> = ({ onSuccess }) => {\n  const [isChanges, setIsChanges] = useState(false);\n  const { data } = useProfile();\n  const { update, isLoading, isSuccess } = useProfileUpdate();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (data) {\n      form.setFieldsValue(data);\n    }\n  }, [data, form]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      setIsChanges(false);\n    }\n    if (isSuccess && onSuccess) {\n      onSuccess();\n    }\n  }, [isSuccess, onSuccess]);\n\n  const handleChange = () => {\n    setIsChanges(true);\n  };\n\n  const onFinish: FormProps<FieldType>['onFinish'] = (values) => {\n    update(values.name);\n  };\n\n  return (\n    <Card className={styles.card}>\n      <Form form={form} name=\"ProfileForm\" layout=\"vertical\" onFinish={onFinish} autoComplete=\"off\">\n        <Form.Item<FieldType>\n          label=\"Full Name\"\n          name=\"name\"\n          rules={[{ required: true, message: 'Please enter your name!' }]}\n        >\n          <Input onChange={handleChange} placeholder=\"John Doe\" />\n        </Form.Item>\n\n        <Form.Item<FieldType> label=\"Email\" name=\"email\">\n          <Input readOnly />\n        </Form.Item>\n\n        <Form.Item<FieldType> label=\"Date of Registration\" name=\"signUpDate\">\n          <Input readOnly />\n        </Form.Item>\n\n        <Space className={styles.actions}>\n          <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading || !isChanges}>\n            {isLoading ? <Spin /> : 'Save'}\n          </Button>\n        </Space>\n      </Form>\n    </Card>\n  );\n};\n","import { useEffect } from 'react';\nimport { useProfileQuery } from 'src/entities/User';\nimport { parseErrorAndThrow } from 'src/shared/api/errors';\n\nexport const useProfile = () => {\n  const { data, refetch, isLoading, isSuccess, isError, error } = useProfileQuery();\n\n  useEffect(() => {\n    if (isError && error) {\n      parseErrorAndThrow(error);\n    }\n  }, [isError, error]);\n\n  return {\n    refetch,\n    data,\n    isLoading,\n    isSuccess,\n  };\n};\n","import { useEffect } from 'react';\nimport { message } from 'antd';\nimport { useChangePasswordMutation } from 'src/entities/User';\nimport { parseErrorAndThrow } from 'src/shared/api/errors';\n\nexport const useProfilePassword = () => {\n  const [changePassword, { isLoading, isSuccess, isError, error }] = useChangePasswordMutation();\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const success = () => {\n    messageApi.open({\n      type: 'success',\n      content: 'This is a success message',\n    });\n  };\n\n  const changePass = async (password: string, newPassword: string) => {\n    await changePassword({ password, newPassword });\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      success();\n    }\n  }, [isSuccess, success]);\n\n  useEffect(() => {\n    if (isError && error) {\n      parseErrorAndThrow(error);\n    }\n  }, [isError, error]);\n\n  return {\n    changePass,\n    contextHolder,\n    isLoading,\n    isSuccess,\n  };\n};\n","import { useEffect } from 'react';\nimport { Button, Card, Form, FormProps, Input, Spin } from 'antd';\nimport styles from './ProfileForm.module.scss';\nimport { useProfilePassword } from '../model/useProfilePassword';\n\ninterface ProfilePwdFormProps {\n  onSuccess?: () => void;\n}\n\ntype FieldType = {\n  password: string;\n  newPassword: string;\n};\n\nexport const ProfilePwdForm: React.FC<ProfilePwdFormProps> = ({ onSuccess }) => {\n  const { changePass, contextHolder, isLoading, isSuccess } = useProfilePassword();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (isSuccess && onSuccess) {\n      onSuccess();\n    }\n  }, [isSuccess]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = (values) => {\n    changePass(values.password, values.newPassword);\n  };\n\n  return (\n    <>\n      {contextHolder}\n      <Card className={styles.card}>\n        <Form form={form} layout=\"vertical\" onFinish={onFinish} autoComplete=\"off\">\n          <Form.Item<FieldType>\n            label=\"Current Password\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please enter your current password!' }]}\n          >\n            <Input.Password placeholder=\"Enter current password\" />\n          </Form.Item>\n\n          <Form.Item<FieldType>\n            label=\"New Password\"\n            name=\"newPassword\"\n            rules={[{ required: true, message: 'Please enter your new password!' }]}\n          >\n            <Input.Password placeholder=\"Enter new password\" />\n          </Form.Item>\n\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className={styles.submitButton}\n            disabled={isLoading}\n          >\n            {isLoading ? <Spin /> : 'Update Password'}\n          </Button>\n        </Form>\n      </Card>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileSwitcher-module_container-wKOR2\",\"profileCard\":\"ProfileSwitcher-module_profileCard-iu57k\",\"title\":\"ProfileSwitcher-module_title-mlJp_\"};","import { useState } from 'react';\nimport { Button, Card, Space, Typography, Divider } from 'antd';\nimport { ProfileForm, ProfilePwdForm } from 'src/features/Profile';\nimport { LocalErrorBoundary } from 'src/shared/ui/LocalErrorBoundary/LocalErrorBoundary';\nimport styles from './ProfileSwitcher.module.scss';\n\nconst { Title, Text } = Typography;\n\nexport const ProfileSwitcher: React.FC = () => {\n  const [isProfile, setIsProfile] = useState(true);\n\n  const handleClick = () => {\n    setIsProfile((prev) => !prev);\n  };\n\n  return (\n    <Space direction=\"vertical\" align=\"center\" className={styles.container}>\n      <LocalErrorBoundary key={isProfile ? 'profile_err_boundary' : 'password_err_boundary'}>\n        <Card className={styles.profileCard}>\n          <Title level={3} className={styles.title}>\n            {isProfile ? 'Profile' : 'Change Password'}\n          </Title>\n\n          {isProfile ? <ProfileForm /> : <ProfilePwdForm />}\n\n          <Divider />\n\n          <Space direction=\"vertical\" align=\"center\" style={{ width: '100%' }}>\n            <Text type=\"secondary\">{isProfile ? 'Want to change your password?' : ''}</Text>\n            <Button type=\"link\" onClick={handleClick}>\n              {isProfile ? 'Change Password' : 'Back to Profile'}\n            </Button>\n          </Space>\n        </Card>\n      </LocalErrorBoundary>\n    </Space>\n  );\n};\n","import { ProfileSwitcher } from 'src/widgets/ProfileSwitcher/';\n\nconst ProfilePage: React.FC = () => {\n  return <ProfileSwitcher />;\n};\n\nexport default ProfilePage;\n","import { Component, ReactNode } from 'react';\nimport { Alert } from 'antd';\nimport {\n  ErrorCode,\n  includeCode as includeCodes,\n  isServerErrors,\n  joinErrors,\n} from 'src/shared/api/errors';\nimport styles from './LocalErrorBoundary.module.scss';\n\ninterface LocalErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface LocalErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class LocalErrorBoundary extends Component<\n  LocalErrorBoundaryProps,\n  LocalErrorBoundaryState\n> {\n  state: LocalErrorBoundaryState = {\n    hasError: false,\n    error: null,\n  };\n\n  static getDerivedStateFromError(error: unknown): LocalErrorBoundaryState {\n    const codesLocal: ErrorCode[] = Object.values(ErrorCode).filter(\n      (code) => code !== ErrorCode.ERR_INTERNAL_SERVER,\n    );\n\n    if ((isServerErrors(error) && !includeCodes(error, codesLocal)) || !isServerErrors(error)) {\n      throw error;\n    }\n\n    const message = isServerErrors(error) ? joinErrors(error) : 'Unknown error.';\n\n    return { hasError: true, error: new Error(message) };\n  }\n\n  handleDismiss = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    return (\n      <div className={styles.errorWrapper}>\n        {this.state.hasError && (\n          <Alert\n            className={styles.errorAlert}\n            closable\n            onClose={this.handleDismiss}\n            type=\"error\"\n            message={this.state.error?.message || 'Unknown error.'}\n            showIcon\n          />\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"errorWrapper\":\"LocalErrorBoundary-module_errorWrapper-jRvGF\",\"errorAlert\":\"LocalErrorBoundary-module_errorAlert-IiYuv\"};"],"names":["ProfileForm","onSuccess","isChanges","setIsChanges","useState","data","refetch","isLoading","isSuccess","isError","error","useEffect","useProfile","update","updateProfile","name","useProfileUpdate","form","useForm","setFieldsValue","className","layout","onFinish","values","autoComplete","Item","label","rules","required","message","onChange","placeholder","readOnly","type","htmlType","disabled","ProfilePwdForm","changePass","contextHolder","changePassword","messageApi","useMessage","success","open","content","password","newPassword","useProfilePassword","Password","Title","Text","ProfileSwitcher","isProfile","setIsProfile","direction","align","LocalErrorBoundary","level","style","width","onClick","prev","Component","hasError","this","setState","getDerivedStateFromError","codesLocal","Object","filter","code","ERR_INTERNAL_SERVER","Error","render","state","A","closable","onClose","handleDismiss","showIcon","props","children"],"sourceRoot":""}